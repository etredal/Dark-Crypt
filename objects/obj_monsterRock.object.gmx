<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monsterRock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
image_speed = 0;

dmg = 24;

startRise = false;
hasRisen = false;

//move speed
spd = random_range(0.2,0.4);

taken = false;

randomMove = 0;

iX = 0;
iY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Awaken
//depth
depth = -y;

//setting distance
var dis = distance_to_object(obj_lantern);

//if within light
if (dis &lt; global.rLantern) &amp;&amp; (hasRisen == false) {
    startRise = true;
}

if (startRise == true) &amp;&amp; (hasRisen == false) {
    //awaken anim
    image_speed = 0.01;
    
    //set to run
    if (image_index == image_number) {
        sprite_index = spr_monsterRockRun;
        
        hasRisen = true;
    }
}

if (hasRisen == true) {
    //anim speed
    image_speed = 0.075;
    
    //HUNT IF NOT GOTTEN LIGHT
    if (taken == false) {
        //go to player if can see
        l = collision_line(x,y,obj_lantern.x,obj_lantern.y,all,false,true);
        
        //if sight is clear
        if !(object_get_solid(l) == true)  {
            move_towards_point(obj_lantern.x,obj_lantern.y,spd);
        } else {
            //random
            rX = x+irandom_range(-64,64)
            rY = y+irandom_range(-64,64)
            
            //Will randomly move after time
            randomMove = irandom(16 * room_speed);
            
            if (randomMove == 1) {
                //check and move
                move_towards_point(rX,rY,spd);
                
                //setting initials
                iX = rX
                iY = rY;
            }
            
            //stop moving if too close
            var dis1 = distance_to_point(iX,iY);
    
            if (dis1 &lt; 3) {
                speed = 0;
            }
        }
    } else {
        //Light
        scr_setLight(32,0.8,1.2,c_yellow);
    
        //random
        rX = x+irandom_range(-64,64)
        rY = y+irandom_range(-64,64)
        
        //Will randomly move after time
        randomMove = irandom(16 * room_speed);
        
        if (randomMove == 1) {
            //check and move
            move_towards_point(rX,rY,spd);
            
            //setting initials
            iX = rX
            iY = rY;
        }
        
        //stop moving if too close
        var dis1 = distance_to_point(iX,iY);
    
        if (dis1 &lt; 3) {
            speed = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
if (!place_free(x+hspeed,y+vspeed)) {
    hspeed = 0;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ember">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy
with (other) {
    instance_destroy();
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lantern">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set
if (taken == false) {
    //Take some
    global.rLantern -= dmg;    

    taken = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
