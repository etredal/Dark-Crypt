<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
instance_create(x,y,obj_lantern);

//Set Lantern
global.xLanternOffset = 11;
global.yLanternOffset = 9;

//Setting Animation
imageSpeed= 0.075;

//Movement speed
standardSpeed = 2.2;

//Attack var
attack = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move and setting
//Set anim to 0
image_speed = 0;

//depth
depth = -y;

if (keyboard_check(vk_left) || keyboard_check(ord('A'))) {
    //collision check
    if (place_free(x - 1,y)) {
        x -= 1;
    }
    
    //Anim set
    image_speed = imageSpeed;
    
    //Set Sprite
    sprite_index = spr_playerLeft;
    
    //Set Lantern
    global.xLanternOffset = -4;
    global.yLanternOffset = 9;
    
    obj_lantern.depth = -9999;
}

if (keyboard_check(vk_up) || keyboard_check(ord('W'))) {
    //collision check
    if (place_free(x,y - 1)) {
        y -= 1;
    }
    
    //Anim set
    image_speed = imageSpeed;
    
    //Set Sprite
    sprite_index = spr_playerUp;
    
    //Set Lantern
    global.xLanternOffset = -11;
    global.yLanternOffset = 9;
    
    obj_lantern.depth = 1;
}

if (keyboard_check(vk_right) || keyboard_check(ord('D'))) {
    //collision check
    if (place_free(x + 1,y)) {
        x += 1;
    }
    
    //Anim set
    image_speed = imageSpeed;
    
    //Set Sprite
    sprite_index = spr_playerRight;
    
    //Set Lantern
    global.xLanternOffset = 4;
    global.yLanternOffset = 9;
    
    obj_lantern.depth = 1;
}

if (keyboard_check(vk_down) || keyboard_check(ord('S'))) {
    //collision check
    if (place_free(x,y + 1)) {
        y += 1;
    }
    
    //Anim set
    image_speed = imageSpeed;
    
    //Set Sprite
    sprite_index = spr_playerDown;
    
    //Set Lantern
    global.xLanternOffset = 11;
    global.yLanternOffset = 9;
    
    obj_lantern.depth = -9999;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hitting
if (keyboard_check_pressed(vk_space)) {
    //Starting attack
    if (attack == false) {
        attack = true;
    }
}

if (attack == true) {
    //Anim set
    image_speed = imageSpeed;
    
    //---------------------------
    //Sprite Setting
    if (sprite_index == spr_playerDown) {
        sprite_index = spr_playerDownAttack; 
    }
    
    //Setting Lantern Pos
    if (sprite_index == spr_playerDownAttack) {
        if (image_index == 0) {
            //Set Lantern
            global.xLanternOffset = 11;
            global.yLanternOffset = 9;
        } else if (image_index == 1) {
            //Set Lantern
            global.xLanternOffset = 14;
            global.yLanternOffset = 12;
        } else if (image_index == 2) {
            //Set Lantern
            global.xLanternOffset = -4;
            global.yLanternOffset = 8;
        }
    }
    
    //Sprite Setting
    if (sprite_index == spr_playerLeft) {
        sprite_index = spr_playerLeftAttack; 
    }
    
    //Setting Lantern Pos
    if (sprite_index == spr_playerLeftAttack) {
        if (image_index == 0) {
            //Set Lantern
            global.xLanternOffset = -4;
            global.yLanternOffset = 9;
        } else if (image_index == 1) {
            //Set Lantern
            global.xLanternOffset = -4;
            global.yLanternOffset = 9;
        } else if (image_index == 2) {
            //Set Lantern
            global.xLanternOffset = -4;
            global.yLanternOffset = 9;
        }
    }
    
    //Sprite Setting
    if (sprite_index == spr_playerUp) {
        sprite_index = spr_playerUpAttack; 
    }
    
    //Setting Lantern Pos
    if (sprite_index == spr_playerUpAttack) {
        if (image_index == 0) {
            //Set Lantern
            global.xLanternOffset = -11;
            global.yLanternOffset = 9;
        } else if (image_index == 1) {
            //Set Lantern
            global.xLanternOffset = -4;
            global.yLanternOffset = 9;
        } else if (image_index == 2) {
            //Set Lantern
            global.xLanternOffset = -4;
            global.yLanternOffset = 9;
        }
    }
    
    //Sprite Setting
    if (sprite_index == spr_playerRight) {
        sprite_index = spr_playerRightAttack;   
    }
    
    //Setting Lantern Pos
    if (sprite_index == spr_playerRightAttack) {
        if (image_index == 0) {
            //Set Lantern
            global.xLanternOffset = 4;
            global.yLanternOffset = 9;
        } else if (image_index == 1) {
            //Set Lantern
            global.xLanternOffset = -4;
            global.yLanternOffset = 9;
        } else if (image_index == 2) {
            //Set Lantern
            global.xLanternOffset = -4;
            global.yLanternOffset = 9;
        }
    }
    
    //--------------------------
    //if played through
    if (image_number &lt; image_index) {
        //Deactivation
        attack = false;
        
        //Returning
        if (sprite_index == spr_playerDownAttack) {
            sprite_index = spr_playerDown;
        }
        
        if (sprite_index == spr_playerLeftAttack) {
            sprite_index = spr_playerLeft;
        }
        
        if (sprite_index == spr_playerUpAttack) {
            sprite_index = spr_playerUp;
        }
        
        if (sprite_index == spr_playerRightAttack) {
            sprite_index = spr_playerRight;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
