<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
point_lt = 0;
point_rt = 0;
point_ld = 0;
point_rd = 0;

b = instance_create(x,y,cont_block);
b.image_xscale = image_xscale;
b.image_yscale = image_yscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
draw_set_color(c_black);
draw_set_alpha(0.4);

point_lt = point_direction(obj_lantern.x,obj_lantern.y, x-16 * image_xscale,y-16 * image_yscale);
point_rt = point_direction(obj_lantern.x,obj_lantern.y, x+16 * image_xscale,y-16 * image_yscale);
point_ld = point_direction(obj_lantern.x,obj_lantern.y, x-16 * image_xscale,y+16 * image_yscale);
point_rd = point_direction(obj_lantern.x,obj_lantern.y, x+16 * image_xscale,y+16 * image_yscale);

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shading
draw_triangle(x-16 * image_xscale,y-16 * image_yscale,(x-16 * image_xscale)+lengthdir_x(1000,point_lt),(y-16 * image_yscale)+lengthdir_y(1000,point_lt),(x+16 * image_xscale)+lengthdir_x(1000,point_rt),(y-16 * image_yscale)+lengthdir_y(1000,point_rt),0);
draw_triangle(x-16 * image_xscale,y-16 * image_yscale,(x+16 * image_xscale)+lengthdir_x(1000,point_rt),(y-16 * image_yscale)+lengthdir_y(1000,point_rt),x+16 * image_xscale,y-16 * image_yscale,0);
draw_triangle(x-16 * image_xscale,y+16 * image_yscale,(x-16 * image_xscale)+lengthdir_x(1000,point_ld),(y+16 * image_yscale)+lengthdir_y(1000,point_ld),(x+16 * image_xscale)+lengthdir_x(1000,point_rd),(y+16 * image_yscale)+lengthdir_y(1000,point_rd),0);
draw_triangle(x-16 * image_xscale,y+16 * image_yscale,(x+16 * image_xscale),y+16 * image_yscale,(x+16 * image_xscale)+lengthdir_x(1000,point_rd),(y+16 * image_yscale)+lengthdir_y(1000,point_rd),0);
draw_triangle(x-16 * image_xscale,y+16 * image_yscale,(x-16 * image_xscale),y-16 * image_yscale,(x-16 * image_xscale)+lengthdir_x(1000,point_lt),(y-16 * image_yscale)+lengthdir_y(1000,point_lt),0);
draw_triangle(x-16 * image_xscale,y+16 * image_yscale,(x-16 * image_xscale)+lengthdir_x(1000,point_ld),(y+16 * image_yscale)+lengthdir_y(1000,point_ld),(x-16 * image_xscale)+lengthdir_x(1000,point_lt),(y-16 * image_yscale)+lengthdir_y(1000,point_lt),0);
draw_triangle(x+16 * image_xscale,y+16 * image_yscale,(x+16 * image_xscale),y-16 * image_yscale,x+16+lengthdir_x(1000,point_rd),(y+16 * image_yscale)+lengthdir_y(1000,point_rd),0);
draw_triangle(x+16 * image_xscale,y-16 * image_yscale,(x+16 * image_xscale)+lengthdir_x(1000,point_rt),(y-16 * image_yscale)+lengthdir_y(1000,point_rt),(x+16 * image_xscale)+lengthdir_x(1000,point_rd),(y+16 * image_yscale)+lengthdir_y(1000,point_rd),0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
