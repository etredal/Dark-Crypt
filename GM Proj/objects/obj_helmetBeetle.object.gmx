<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_helmetBeetle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
//Set
dmg = 64;
hp = 3;
path = false;

//States
idle = true;
attack = false;
timer = 0;

//Randomly Drop
drop = obj_shineLarge;

//mvmnt
collision = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///States
//Init
depth = -y;

//Setting image angle
if (direction &lt; 90 || direction &gt; 270) {
    image_xscale = 1;
} else {
    image_xscale = -1;
}

if (timer == 0) {
    //Setting State
    if (distance_to_point(obj_player.x,obj_player.y) &lt; 100) {
        //Random
        var ran = irandom(4 * room_speed);
        
        //states
        if (ran == 1) {
            idle = false;
            attack = true;
        }
    }
    
    //States------------------------
    if (idle == true) &amp;&amp; (distance_to_point(obj_player.x,obj_player.y) &lt; 1000) {
        image_speed = 0.075;
        spd = 0.2;
        
        //Path Move
        if (path == false) {
            rX = irandom_range(0,room_width);
            rY = irandom_range(0,room_height);
            
            path = true;
        }
        
        if (collision = false) {
            //Move
            move_towards_point(rX, rY, spd);
        }
        
        //Reset Movement
        ran = irandom(15 * room_speed);
        
        if (distance_to_point(rX,rY) &lt; 4) || (ran == 1) {
            path = false;
        }
    }
    
    if (attack == true) {
        image_speed = 0.1;    
        spd = 0.3;
        
        if (collision == false) {
            move_towards_point(obj_lantern.x,obj_lantern.y,spd);
        }
        
        var ran = irandom(5 * room_speed);
        
        if (ran == 1) {
            idle = true;
            attack = false;
            
            path = false;
        }
    }
} else {
    timer--;
    
    //Resetting
    if (timer &lt;= 0) {
        idle = true;
        attack = false;
            
        path = false;
        
        timer = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
//resetting
collision = false

//checking
if (!place_free(x+hspeed,y+vspeed)) {
    //Setting
    hspeed = 0;
    vspeed = 0;
    
    image_speed = 0;
    image_index = 0;
    
    path = false;
    
    //Setting
    idle = true;
    attack = false;   
    
    collision = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ember">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if (other.x &lt; x - 8) &amp;&amp; (image_xscale == -1) {
    //Destroy
    with (other) {
        instance_destroy();
    }
} else if (other.x &gt; x + 8) {
    //Destroy
    with (other) {
        instance_destroy();
    }
} else {
    //Destroy
    with (other) {
        instance_destroy();
    }
    
    //Drop HP
    hp -= 1;
    
    //Starts to attack
    attack = true;
    
    if (hp &lt;= 0) {
        //random drop
        var rand = irandom(3);
        if (rand == 1) {
            instance_create(x,y,drop);
        }
    
        //destroy
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lantern">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Steal
if (timer == 0) {
    global.rLantern -= dmg;
}

timer = 3 * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
