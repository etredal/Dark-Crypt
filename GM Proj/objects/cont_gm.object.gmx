<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-99999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Particle System(s)
global.p_main = part_system_create();
part_system_depth(global.p_main,-999999);

//WORLD EFFECT
global.p_worldEffect = part_type_create();

part_type_shape(global.p_worldEffect,pt_shape_square);            //This defines the particles shape
part_type_size(global.p_worldEffect,0.01,0.03,0,0.0001);                    //This is for the size
part_type_scale(global.p_worldEffect,1,1);                       //This is for scaling
part_type_color1(global.p_worldEffect,c_gray);                  //This sets its colour. There are three different codes for this
part_type_alpha2(global.p_worldEffect,1,0.5);                        //This is its alpha. There are three different codes for this
part_type_speed(global.p_worldEffect,0.005,0.2,-0.0001,0);            //The particles speed
part_type_direction(global.p_worldEffect,0,359,0,20);            //The direction
part_type_orientation(global.p_worldEffect,0,0,0,0,1);           //This changes the rotation of the particle
part_type_blend(global.p_worldEffect,1);                         //This is the blend mode, either additive or normal
part_type_life(global.p_worldEffect,4 * room_speed,6 * room_speed);                       //this is its lifespan in steps

//LANTERN EFFECT
global.p_lanternEffect = part_type_create();

part_type_shape(global.p_lanternEffect,pt_shape_pixel);
part_type_size(global.p_lanternEffect,0.003,0.4,0,0);
part_type_scale(global.p_lanternEffect,1,1);
part_type_color1(global.p_lanternEffect,c_yellow);
part_type_alpha2(global.p_lanternEffect,1,0);
part_type_speed(global.p_lanternEffect,0.0005,0.5,-0.001,0);
part_type_direction(global.p_lanternEffect,0,359,0,20);
part_type_orientation(global.p_lanternEffect,0,0,0,0,1);
part_type_blend(global.p_lanternEffect,1); 
part_type_life(global.p_lanternEffect,1 * room_speed,2 * room_speed);

//EMBER EFFECT
global.p_emberEffect = part_type_create();

part_type_shape(global.p_emberEffect,pt_shape_sphere);
part_type_size(global.p_emberEffect,0.01,0.03,0,0);
part_type_scale(global.p_emberEffect,1,1);
part_type_color1(global.p_emberEffect,c_red);
part_type_alpha2(global.p_emberEffect,1,0);
part_type_speed(global.p_emberEffect,0.1,0.2,0,0);
part_type_direction(global.p_emberEffect,0,359,0,20);
part_type_orientation(global.p_emberEffect,0,0,0,0,1);
part_type_blend(global.p_emberEffect,1); 
part_type_life(global.p_emberEffect,1 * room_speed,2 * room_speed);

//SHOOTER SHOT EFFECT
global.p_shooterShotEffect = part_type_create();

part_type_shape(global.p_shooterShotEffect,pt_shape_sphere);
part_type_size(global.p_shooterShotEffect,0.01,0.03,0,0);
part_type_scale(global.p_shooterShotEffect,1,1);
part_type_color1(global.p_shooterShotEffect,c_green);
part_type_alpha2(global.p_shooterShotEffect,1,0);
part_type_speed(global.p_shooterShotEffect,0.1,0.2,0,0);
part_type_direction(global.p_shooterShotEffect,0,359,0,20);
part_type_orientation(global.p_shooterShotEffect,0,0,0,0,1);
part_type_blend(global.p_shooterShotEffect,1); 
part_type_life(global.p_shooterShotEffect,1 * room_speed,2 * room_speed);

//Skull EFFECT
global.p_skullEffect = part_type_create();

part_type_shape(global.p_skullEffect,pt_shape_square);
part_type_size(global.p_skullEffect,0.15,0.2,0,0);
part_type_scale(global.p_skullEffect,1,1);
part_type_color1(global.p_skullEffect,c_white);
part_type_alpha2(global.p_skullEffect,0.2,0);
part_type_speed(global.p_skullEffect,0,0,0,0);
part_type_orientation(global.p_skullEffect,0,0,0,0,1);
part_type_blend(global.p_skullEffect,1); 
part_type_life(global.p_skullEffect,1 * room_speed,2 * room_speed);

//TORCH EFFECT
global.p_torchEffect = part_type_create();

part_type_shape(global.p_torchEffect,pt_shape_sphere);
part_type_size(global.p_torchEffect,0.01,0.03,0,0);
part_type_scale(global.p_torchEffect,1,1);
part_type_color1(global.p_torchEffect,c_red);
part_type_alpha2(global.p_torchEffect,1,0);
part_type_speed(global.p_torchEffect,0.1,0.2,0,0.05);
part_type_direction(global.p_torchEffect,80,100,0,5);
part_type_orientation(global.p_torchEffect,0,0,0,0,1);
part_type_blend(global.p_torchEffect,1); 
part_type_life(global.p_torchEffect,1 * room_speed,2 * room_speed);

//WISP EFFECT
global.p_wispEffect = part_type_create();

part_type_shape(global.p_wispEffect,pt_shape_sphere);
part_type_size(global.p_wispEffect,0.01,0.03,0,0);
part_type_scale(global.p_wispEffect,1,1);
part_type_color1(global.p_wispEffect,c_white);
part_type_alpha2(global.p_wispEffect,1,0.75);
part_type_speed(global.p_wispEffect,0.1,0.2,0,0.05);
part_type_direction(global.p_wispEffect,0,359,0,5);
part_type_orientation(global.p_wispEffect,0,0,0,0,1);
part_type_blend(global.p_wispEffect,1); 
part_type_life(global.p_wispEffect,0.5 * room_speed,1 * room_speed);

//BROD EFFECT
global.p_brodEffect = part_type_create();

part_type_sprite(global.p_brodEffect,spr_feather,false,false,false);
part_type_size(global.p_brodEffect,0.1,0.5,0,0);
part_type_scale(global.p_brodEffect,1,1);
part_type_alpha2(global.p_brodEffect,1,0);
part_type_speed(global.p_brodEffect,0.5,1,-0.008,0.);
part_type_direction(global.p_brodEffect,0,359,0,0);
part_type_orientation(global.p_brodEffect,0,359,0,0,1);
part_type_blend(global.p_brodEffect,1); 
part_type_life(global.p_brodEffect,1 * room_speed,3 * room_speed);

//BROD EFFECT
global.p_brodShotEffect = part_type_create();

part_type_sprite(global.p_brodShotEffect,spr_feather,false,false,false);
part_type_size(global.p_brodShotEffect,0.1,0.5,0,0);
part_type_scale(global.p_brodShotEffect,1,1);
part_type_alpha2(global.p_brodShotEffect,1,0);
part_type_speed(global.p_brodShotEffect,0.05,0.1,-0.005,0);
part_type_direction(global.p_brodShotEffect,0,359,0,0);
part_type_orientation(global.p_brodShotEffect,0,359,0,0,1);
part_type_blend(global.p_brodShotEffect,1); 
part_type_life(global.p_brodShotEffect,0.5 * room_speed,1.5 * room_speed);

//SAND MAN EFFECT
global.p_sandManEffect = part_type_create();

part_type_shape(global.p_sandManEffect,pt_shape_pixel);
part_type_size(global.p_sandManEffect,0.1,0.3,0,0);
part_type_scale(global.p_sandManEffect,1,1);
part_type_color1(global.p_sandManEffect,c_orange);
part_type_alpha2(global.p_sandManEffect,1,0);
part_type_speed(global.p_sandManEffect,0.1,0.2,0,0);
part_type_direction(global.p_sandManEffect,0,359,0,0);
part_type_orientation(global.p_sandManEffect,0,0,0,0,1);
part_type_blend(global.p_sandManEffect,1); 
part_type_life(global.p_sandManEffect,1 * room_speed,2 * room_speed);

//SAND MAN SHOT EFFECT
global.p_sandManShotEffect = part_type_create();

part_type_shape(global.p_sandManShotEffect,pt_shape_sphere);
part_type_size(global.p_sandManShotEffect,0.01,0.03,0,0);
part_type_scale(global.p_sandManShotEffect,1,1);
part_type_color1(global.p_sandManShotEffect,c_green);
part_type_alpha2(global.p_sandManShotEffect,1,0);
part_type_speed(global.p_sandManShotEffect,0.1,0.2,0,0);
part_type_direction(global.p_sandManShotEffect,0,359,0,20);
part_type_orientation(global.p_sandManShotEffect,0,0,0,0,1);
part_type_blend(global.p_sandManShotEffect,1); 
part_type_life(global.p_sandManShotEffect,1 * room_speed,2 * room_speed);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///IF no save file exists, create file -- Also Creates Buttons
if !(file_exists("Dark-Crypt_Save.txt")) {
    saveFile = file_text_open_write("Dark-Crypt_Save.txt");
    file_text_write_real(saveFile, 0);
    file_text_close(saveFile);
} 

//Set location
saveFile = file_text_open_read("Dark-Crypt_Save.txt");
val = file_text_read_real(saveFile);
file_text_close(saveFile);

//Set next line
var i = 0;
var j = 0;

//Loop for buttons
for (i = 0; i &lt; 26; i++) {
    var rows = 9;
    
    if (i%rows == 0) &amp;&amp; (i != 0) {
        j += 1;
    }
    
    var xOffset = 64 + 32;
    var yOffset = 64 + 32;

    //Create button
    button = instance_create((xOffset*(i - (j*rows))) + 448,(112 -32) + (yOffset*j),obj_button3);
    
    //Is unlocked
    if (i &lt;= val) {
        button.sprite_index = spr_button3;
        button.image_index = i;
    } else {
        button.sprite_index = spr_buttonLocked;
    }
    
    //torch
    if (button.sprite_index != spr_buttonLocked) {
        instance_create(button.x,button.y - 64 + 8,obj_torch);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
//time
global.levelTimer = 0;

//for losing game
global.lostTimer = 5 * room_speed; //5 seconds

//Fading
fadeTimeReset = 1.5 * room_speed;
fadeTime = fadeTimeReset;
alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set in fullscreen
window_set_fullscreen(true);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Global Colors
global.lightYellow = make_colour_rgb(255,255,200);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particle Type Create
p_worldEffectEmitter = part_emitter_create(global.p_main);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game Lost and Playground
if (room == rm_lost) {
    global.lostTimer--;
    
    if (global.lostTimer &lt;= 0) {
        room_goto(rm_mainMenu);
    
        instance_destroy(); //destroying self to be reset
    }
}

//goto playground
if (room != rm_playground) {
    if (keyboard_string == "playground") {
        if (keyboard_check_pressed(vk_enter)) {
            room_goto(rm_playground);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hiding Cursor
if (room == rm_mainMenu) {
    window_set_cursor(cr_default); 
} else {
    window_set_cursor(cr_none);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer
if (scr_isLevel() == true) {
    global.levelTimer += 1/room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particle Effect Emitter/ystem Create
//Create 
if !(part_system_exists(global.p_main)) {
    global.p_main = part_system_create();
    part_system_depth(global.p_main,-999999);
}

//If it is a level world effect/fog effect
if (scr_isLevel() == true) {
    part_emitter_region(global.p_main, p_worldEffectEmitter, view_xview, view_xview + view_wview, view_yview, view_yview + view_hview, ps_shape_rectangle, ps_distr_linear);
    part_emitter_stream(global.p_main, p_worldEffectEmitter,global.p_worldEffect, scr_numberOnce(0.5 * room_speed));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fog
if (scr_isLevel()) {
    background_index[0] = bg_fog;
    background_visible[0] = true;
    background_alpha[0] = 0.15;
    background_hspeed[0] = -0.3;
    background_vspeed[0] = 0.005;
    background_htiled[0] = true;
    background_vtiled[0] = true;
    background_foreground[0] = true;
} else {
    background_visible[0] = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SAVE TIME
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset time
if (scr_isLevel() == true) {
    global.levelTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save level
//ALL LEVELS
var currentLevel = scr_levelNumber();

if (currentLevel != -1) {
    //Set location
    saveFile = file_text_open_read("Stygian_MazeSave.txt");
    val = file_text_read_real(saveFile);
    
    //Save
    if (val &lt; currentLevel) {
        saveFile = file_text_open_write("Stygian_MazeSave.txt");
        file_text_write_real(saveFile, currentLevel);
    }
    
    //close
    file_text_close(saveFile);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade start
fadeTime = fadeTimeReset;
alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy particle system(s)
//Destroying Types
part_type_destroy(global.p_lanternEffect);

//Emitters all destroyed
part_emitter_destroy_all(global.p_main);

//Destroying System
part_system_destroy(global.p_main);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Timer
if (scr_isLevel() == true) {
    draw_set_font(fnt_tutorial);
    
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    
    draw_text(view_xview + view_wview/2,view_yview + view_hview/12,"Timer: " + string(global.levelTimer));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade
if (fadeTime &gt; 0) {
    alpha -= 1/fadeTimeReset; //Full value

    fadeTime -= 1;
    
    draw_set_alpha(alpha);
    draw_set_color(c_black);
    draw_rectangle(view_xview,view_yview,view_xview + view_wview,view_yview + view_hview,c_black);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fullscreen Toggle
if (window_get_fullscreen() == true) {
    window_set_fullscreen(false);
} else {
    window_set_fullscreen(true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
